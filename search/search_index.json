{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#my-personal-mle-blog","title":"My personal MLE blog","text":""},{"location":"anotacao-o-que-e-machine-learning/","title":"Anota\u00e7\u00e3o: O que \u00e9 Machine Learning?","text":"<p>Este artigo s\u00e3o as anota\u00e7\u00f5es que fiz lendo a se\u00e7\u00e3o O que \u00e9 Machine Learning? do livro Deep Learning for Coders with fastai &amp; PyTorch.</p> <p>Machine Learning \u00e9 uma forma de fazer com que os computadores executem tarefas. A maneira  tradicional de se fazer isto \u00e9 simplesmente criando um programa que recebe inputs, faz  algum processamento e traz um resultado.</p> <p>Mas em 1949, Arthur Samuel, um pesquisador da IBM, come\u00e7ou a trabalhar em uma nova forma de fazer os computadores completarem tarefas, que ele veio a chamar de Machine Learning.</p> <p>Segundo Arthur, ao inv\u00e9s de escrever o passo a passo que os programas deveriam seguir para executar uma tarefa, deveria-se mostrar exemplos do problema que se quer resolver e deixar o pr\u00f3prio computador descobrir a melhor forma  de resolv\u00ea-lo.</p> <p>Ent\u00e3o, sua ideia segue o processo de passar inputs e pesos (weights) para o programa (model), gerar um resultado e a partir dele avaliar a performance do modelo. Com tal avalia\u00e7\u00e3o e realizando v\u00e1rias intera\u00e7\u00f5es, os pesos s\u00e3o ajustados de forma a maximizar a performance para obter resultados satisfat\u00f3rios. A figura abaixo ilustra esse processo.</p> <p></p> <p>Mais detalhes podem ser encontrados no livro e videoaula criados pelos autores.</p>"},{"location":"for-rent/","title":"For rent","text":"<p>For Rent \u00e9 um projeto end-to-end sobre predizer valores de aluguel no Brasil.</p> <p>Foi feita uma an\u00e1lise de uma base de dados com 10.692 registros de alugu\u00e9is de casas e apartamentos em 5 cidades. Comparando modelos de regress\u00e3o, o Random Forest obteve R<sup>2</sup> de 0,98 e foi eleito o mais satisfat\u00f3rio. O modelo foi salvo em um bucket S3 e exposto por meio de um endpoint  criado usando Flask e publicado no Heroku.</p> <p>Por fim, criou-se uma aplica\u00e7\u00e3o em React com um formul\u00e1rio em que os campos s\u00e3o os atributos com que o modelo foi  treinado, e a partir da\u00ed \u00e9 poss\u00edvel interagir com o modelo atrav\u00e9s do endpoint e visualizar os valores de aluguel preditos.</p> <p>Para acessar a aplica\u00e7\u00e3o basta entrar aqui.</p> <p>Mais informa\u00e7\u00f5es podem ser encontradas no reposit\u00f3rio do projeto.</p>"},{"location":"i-am-back/","title":"I am back","text":"<p>And finally, I AM BACK \ud83c\udf89\ud83e\udd73!!</p> <p>Everyone was asking: \u2018Where is he?\u2019. My grandma asked and even the New York Times wrote a post about my missing, after almost three years without writing any word into this blog, my energies are renewed with a lot of ideas to write a book series just like GoT (just kidding).</p> <p>A lot happened in the past three years, but the great news that is worth sharing and motor to this new blog era is that it\u2019s been three months since I migrated from Software Engineering to Machine Learning Engineering at QuintoAndar. This role was a long-time desire and now I\u2019d like to explore this world to its maximum, writing about every new discovery and cool stuff here in this blog.</p> <p>The blog was redesigned, some new ideas are in draft and as you may have noticed, I\u2019m writing in English. So, if you spot some misspellings, some wrong grammar, or even non-sense sentences, please email me I may correct it.</p> <p>That\u2019s all for today. And for now, I\u2019ll just leave you with the old blog post home page as a nostalgic piece. </p> <p></p> <p>Goggle up, ML is about to happen; I\u2019ll see you in the next post \ud83d\ude09</p>"},{"location":"parlez-vous-francais/","title":"Parlez-vous Fran\u00e7ais?","text":"<p>I'll admit it. It's been a long time since I wrote anything here in this blog.</p> <p>There were some drafts here and there, but no contents came to light. Now I'm back with a new initiative and news ideias. I now, I now, you've seen this film before. But, at least, I'm trying my best, because a lot of ups and downs happened in my life since january. Anyway, let's stop rambling around here I get to the point.</p> <p>During March and April in this year, I've spent 30 days in Europe visiting French, Spain and Portugal. It was a wonderful trip and Paris was a special place to be. There, I definely understood the meaning of monument, and hearing french language live was awesome. I've already tried to learn french with Duolingo and Babbel, but coudn't go any further because, I must confess, I can't engage with these apps at all (I'll make a post about that later). The point is: the experince in Paris ignited the desire to roll up my sleeves and learn french once and for all. It is true I don't have any practial reason to learn it, but hey, to learn something new just for the sake of leaning, also counts as something valid to do for yourself. Besides I fell in love with France and I'm looking forward to visit it many more times. And the difference betweeen what I did before and now, when it comes to learn a language, is the approach. Insted of focusing in these apps, I'll leang from  contents that I do like! No more phrases without context and repetitive contents.</p> <p>So, that's my updates for today. See you in the next post. \u00c0 bient\u00f4t!</p>"},{"location":"projeto-end-to-end-hands-on-ml/","title":"Projeto end-to-end atrav\u00e9s do livro Hands-on Machine Learning","text":"<p>O livro Hands-on Machine Learning with Scikit-Learn, Keras &amp; TensorFlow da editora O'Reilly est\u00e1 sempre sendo citado como um dos melhores livros para aprender os conceitos de Machine Learning (ML) e ser introduzido as principais bibliotecas da \u00e1rea.</p> <p>N\u00e3o se trata de um livro b\u00e1sico para iniciantes, visto que o pr\u00f3prio livro na se\u00e7\u00e3o de  pr\u00e9-requisitos assume do leitor uma familiaridade com Python, principalmente as bibliotecas  NumPy, pandas e Matplotlib. Al\u00e9m de um conhecimento b\u00e1sico de alguns conceitos de c\u00e1lculo, \u00e1lgebra linear, probabilidade e estat\u00edstica.</p> <p>O que chama a aten\u00e7\u00e3o no livro \u00e9 a maneira com que \u00e9 organizado e a objetividade em tratar dos assuntos. Ele \u00e9 dividido em duas partes, sendo que a primeira se trata dos fundamentos de ML, onde s\u00e3o apresentados os principais algoritmos e outros conceitos importantes, como  cross-validation e ajustes de hiperpar\u00e2metros. J\u00e1 a segunda parte, aborda redes neurais e  Deep Learning, mostrando diferentes arquiteturas e formas de treinamento. Outro ponto interessante que vale mencionar \u00e9 o  reposit\u00f3rio no GitHub que possui todos os c\u00f3digos que s\u00e3o apresentados ao longo do livro.</p> <p>Fazendo jus ao t\u00edtulo Hands-on, logo no segundo cap\u00edtulo, ap\u00f3s apresentar uma vis\u00e3o geral de ML e at\u00e9 mesmo antes de ir mais a fundo nos principais conceitos e algoritmos, o livro j\u00e1 apresenta um projeto end-to-end para voc\u00ea ter uma no\u00e7\u00e3o bem pr\u00e1tica do que pode ser feito com ML, quais passos tomar e principalmente como fazer. De forma fict\u00edcia, o livro imagina um cen\u00e1rio em que voc\u00ea \u00e9 um cientista de dados rec\u00e9m contratado em uma companhia de mercado imobili\u00e1rio e o seu objetivo \u00e9 usar dados do census do estado da California nos Estados  Unidos para construir um modelo de predi\u00e7\u00e3o do pre\u00e7o do aluguel. A partir desse contexto s\u00e3o  seguidos os  seguintes passos:</p> <ol> <li>Vis\u00e3o geral do problema;</li> <li>Obter os dados;</li> <li>Descoberta e visualiza\u00e7\u00e3o dos dados para ter insights;</li> <li>Preparar os dados para os algoritmos de ML;</li> <li>Selecionar e treinar o modelo;</li> <li>Ajuste fino do modelo;</li> <li>Apresentar a solu\u00e7\u00e3o;</li> <li>Deploy, monitorar e mater o sistema.</li> </ol> <p>Todos esses passos s\u00e3o apresentados de uma forma bem did\u00e1tica e clara, e nessa abordagem de aprendizagem top to bottom, a leitura do livro e principalmente desse cap\u00edtulo \u00e9 muito  recomendada.</p>"},{"location":"virtual-environment-and-package-installation/","title":"Virtual Environment and package installation","text":"<p>Notes based on the live Ambientes virtuais e instala\u00e7\u00e3o de bibliotecas - Live de Python #191 from the youtube channel Eduardo Mendes - @Dunossauro.</p> <ul> <li>Python has a large and diverse package ecosystem.</li> <li>We just install a package using <code>pip</code>, but sometimes we want to use different versions from the same package in different projects, for example.</li> <li>And, how to install and manage different package versions? It's messy:</li> </ul> <p></p>"},{"location":"virtual-environment-and-package-installation/#pip","title":"PIP","text":"<ul> <li>PIP stands for Pip Install Package and just installs external packages from PyPI.</li> <li>It gets the package, unzip it and store it in a global folder.</li> <li>Show where the python installed the package:</li> </ul> <pre><code>import site\nsite.getsitepackages()\n</code></pre> <ul> <li>To import the package, python looks inside some specific paths.</li> <li>Show the paths python looks for the packages:</li> </ul> <pre><code>import sys\nprint(sys.path)\n</code></pre> <ul> <li>When stored globally, two versions from the same package can't live together</li> <li>Show package details:</li> </ul> <pre><code>$ pip show &lt;package-name&gt;\n</code></pre> <ul> <li>Show dependency tree:</li> </ul> <pre><code># pip insall pipdeptree\n$ pipdeptree\n</code></pre> <ul> <li>Show package list:</li> </ul> <pre><code>$ pip list\n</code></pre> <ul> <li>Different python packages may have the same dependency, but they depend on different versions of the shared package.</li> </ul>"},{"location":"virtual-environment-and-package-installation/#venv","title":"VENV","text":"<ul> <li>Virtual environment tries to isolate the environment.</li> <li>It hacks the <code>site-packages</code> creating a local environment isolated from the global one.</li> <li>It is plug-and-play from python.</li> <li>In the same project, you can have multiple virtual environments.</li> <li>Important commands:</li> </ul> <pre><code>$ python -m venv &lt;env-name&gt; # -m stands for module\n$ source &lt;env-name&gt;/bin/activate\n$ deactivate\n</code></pre>"},{"location":"virtual-environment-and-package-installation/#venv-or-virtualenv","title":"VENV OR VIRTUALENV?","text":"<ul> <li>virtualenv is external to python, and distributed by PyPA (Python Packaging Authority).</li> <li>venv is part of the virtualenv inside python.</li> <li>virtualenv advantages:</li> <li>It's faster;</li> <li>New releases are independent from python releases;</li> <li>It's extensible;</li> <li>Code API;</li> <li>It supports older python versions.</li> </ul>"},{"location":"virtual-environment-and-package-installation/#requirements","title":"requirements","text":"<ul> <li><code>requirements.txt</code> allows you to list all packages required in your application.</li> <li>Install requirements:</li> </ul> <pre><code>$ pip install -r requirements.txt\n</code></pre> <ul> <li><code>freeze</code> builds <code>requirements.txt</code> file automatically. However, <code>freeze</code> gets all installed packages, not only the ones you need for your project. In that way, some unnecessary packages may be written into the requirements.</li> </ul> <pre><code>$ pip freeze &gt; requirements.txt\n</code></pre> <ul> <li>Remove the package and its dependencies:</li> </ul> <pre><code>$ pip uninstall &lt;package-name&gt; # don't uninstall the package and its dependencies\n$ pip install pip-autoremove\n$ pip-autoremove &lt;package-name&gt; # uninstall the package and its dependencies\n</code></pre> <ul> <li>Create a <code>requirements_dev.txt</code></li> </ul> requirements_dev.txt<pre><code># install production libs\n-r requirements.txt\n\n# list bellow all dev packages\npackage_1\npackage_2\npackage_3\n</code></pre> <ul> <li>Sometimes we need some packages to be in a specific version, mainly if that package is a sub-dependency. That's what <code>constaints.txt</code> is for. It works in any dependency tree level and constrains the package version.</li> <li>It does not overwrite the <code>requiments.txt</code> file, it just indicates whether a specific package is going to be installed, and then install it in a specific version.</li> </ul> <pre><code>$ pip install -r requirements.txt -c constaints.txt\n</code></pre>"},{"location":"virtual-environment-and-package-installation/#other-tools","title":"Other tools","text":"<ul> <li>pip's friends:</li> <li>pip-autoremove: removes the package and its dependencies;</li> <li>pipdeptree: dependency tree.</li> <li>venv's friends:</li> <li>virtualenvwrapper: wraps venv commands.</li> <li>python's friends:</li> <li>pyenv: installs different python versions;</li> <li>tox: runs tests in different python versions;</li> <li>pipx: installs CLI tools apart from the global environment.</li> <li>Scientific world:</li> <li>Conda: package manager just like pip; it has its repository different from PyPI; it downloads packages from other languages, like R, fortran, C, etc.</li> <li>miniconda: python + conda;</li> <li>anaconda: gets all the scientific world;</li> <li>mamba: like miniconda but in C++ aiming performance.</li> </ul>"},{"location":"virtual-environment-and-package-installation/#future","title":"Future","text":"<ul> <li><code>pyproject.toml</code>: replaces <code>requirements.txt</code> + <code>requirements_dev.txt</code> + `setup.py``</li> <li>poetry:<ul> <li>Handles the virtual environment (venv);</li> <li>Handles setup.py + setup.cfg;</li> <li>Package metadata (setup.py);</li> <li>Package installation (pip);</li> <li>Handles package versions (<code>requirements.txt</code>);</li> </ul> </li> <li>flit:<ul> <li>Just like poetry.</li> </ul> </li> <li>pdm:<ul> <li>PEP 582 (Python Enhancement Proposal);</li> <li>Handles packages without the need for the virtual environment.</li> </ul> </li> </ul>"},{"location":"archive/2024/","title":"2024","text":""},{"location":"archive/2023/","title":"2023","text":""},{"location":"archive/2021/","title":"2021","text":""},{"location":"category/now/","title":"now","text":""},{"location":"category/python/","title":"python","text":""},{"location":"category/notes/","title":"notes","text":""},{"location":"category/review/","title":"review","text":""},{"location":"category/project/","title":"project","text":""}]}